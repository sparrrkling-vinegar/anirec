name: CI

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  codestyle:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11
      - name: Install dependencies
        run: |
          sudo apt update -y && \
          sudo apt install -y sqlcipher libsqlcipher-dev && \
          python -m pip install --upgrade pip && \
          pip install poetry && \
          poetry install
      - name: Lint with flake8
        run: poetry run flake8 . --max-line-length=101
      - name: Check cyclomatic complexity
        run: poetry run flake8 --max-complexity=10 --max-line-length=101 .

  tests:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Setup firefox
        id: setup-firefox
        uses: browser-actions/setup-firefox@v1
        with:
          firefox-version: latest

      - name: Install Geckodriver
        run: |
          wget https://github.com/mozilla/geckodriver/releases/download/v0.34.0/geckodriver-v0.34.0-linux64.tar.gz
          tar -xzf geckodriver-v0.34.0-linux64.tar.gz
          sudo mv geckodriver /usr/local/bin/
          sudo chmod +x /usr/local/bin/geckodriver

      - name: Install dependencies
        run: |
          sudo apt update -y && \
          sudo apt install -y sqlcipher libsqlcipher-dev && \
          python -m pip install --upgrade pip && \
          pip install poetry && \
          poetry install

      - name: Run Tests
        run: poetry run pytest --cov . --cov-branch --cov-report=term --cov-fail-under=60
        env:
          DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
          CLIENT_ID: ${{ secrets.CLIENT_ID }}

  bandit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11
      - name: Install dependencies
        run: |
          sudo apt update -y && \
          sudo apt install -y sqlcipher libsqlcipher-dev && \
          python -m pip install --upgrade pip && \
          pip install poetry && \
          poetry install
      - name: Run bandit
        run: poetry run bandit -r . -x ./test

  semgrep:
    name: semgrep-oss/scan
    runs-on: ubuntu-latest

    container:
      image: semgrep/semgrep

    # Skip any PR created by dependabot to avoid permission issues:
    if: (github.actor != 'dependabot[bot]')

    steps:
      - uses: actions/checkout@v4
      - run: semgrep scan --config auto
